{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadbachcha/Desktop/Summer 2024 Projects/Personal-Finance-Tracker/React/finance-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport api from './api';\nimport Popup from \"./components/popup\";\nimport Nav from \"./components/nav\";\nimport Transactions from \"./components/transactions\";\nimport SummarizedView from \"./components/summarizedView\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [startingBalance, setStartingBalance] = useState(0.0);\n  const [goalBalance, setGoalBalance] = useState(0.0);\n  const [expenses, setTotalExpenses] = useState(0.0);\n  const [income, setTotalIncome] = useState(0.0);\n  const [numPayChecks, setNumPayChecks] = useState(0);\n  const fetchTransactions = async () => {\n    const response = await api.get('/transactions/');\n    console.log(response);\n    setTransactions(response.data);\n  };\n  const fetchUserData = async () => {\n    const response = await api.get('/users/1');\n    const goal = response.data.goal_balance;\n    const starting = response.data.starting_balance;\n    setGoalBalance(goal);\n    setStartingBalance(starting);\n  };\n  useEffect(() => {\n    fetchTransactions();\n    fetchUserData();\n  }, []);\n  const [formData, setFormData] = useState({\n    amount: '',\n    category: '',\n    description: '',\n    is_income: false,\n    date: ''\n  });\n  useEffect(() => {\n    const calculateTotalExpenses = () => {\n      if (transactions.length > 0) {\n        const expenses = transactions.filter(transaction => !transaction.is_income);\n        const total = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n        setTotalExpenses(total);\n      } else {\n        setTotalExpenses(0); // Reset total expenses if transactions list is empty\n      }\n    };\n    const calculateTotalIncome = () => {\n      if (transactions.length > 0) {\n        const income = transactions.filter(transaction => transaction.is_income);\n        const total = income.reduce((acc, curr) => acc + curr.amount, 0);\n        setTotalIncome(total);\n      } else {\n        setTotalIncome(0); // Reset total expenses if transactions list is empty\n      }\n    };\n    const calculateNumPayChecks = () => {\n      if (transactions.length > 0) {\n        const checks = transactions.filter(transaction => transaction.category === \"Paycheck\");\n        const total = checks.length;\n        setNumPayChecks(total);\n      } else {\n        setNumPayChecks(0); // Reset total expenses if transactions list is empty\n      }\n    };\n    calculateTotalExpenses(); // Initial calculation\n    calculateTotalIncome(); // Initial calculation\n    calculateNumPayChecks();\n  }, [transactions]); // Depend on 'transactions' to re-run whenever it changes\n\n  const handleSubmit = async formData => {\n    await api.post('/transactions/', formData);\n    setFormData({\n      amount: '',\n      category: '',\n      description: '',\n      is_income: false,\n      date: ''\n    });\n    fetchTransactions();\n  };\n  const handleDeleteMain = async id => {\n    await api.delete('/transactions/' + id);\n    fetchTransactions();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SummarizedView, {\n      goal: goalBalance,\n      starting: startingBalance,\n      debt: expenses,\n      income: income,\n      checks: numPayChecks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      onSubmit: handleSubmit,\n      data: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      onSubmit: handleInitSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transactions, {\n      transactions: transactions,\n      handleDeleteMain: handleDeleteMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"YFrLKRmr338aB2HpXvP6idw42IU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","api","Popup","Nav","Transactions","SummarizedView","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","transactions","setTransactions","startingBalance","setStartingBalance","goalBalance","setGoalBalance","expenses","setTotalExpenses","income","setTotalIncome","numPayChecks","setNumPayChecks","fetchTransactions","response","get","console","log","data","fetchUserData","goal","goal_balance","starting","starting_balance","formData","setFormData","amount","category","description","is_income","date","calculateTotalExpenses","length","filter","transaction","total","reduce","acc","curr","calculateTotalIncome","calculateNumPayChecks","checks","handleSubmit","post","handleDeleteMain","id","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","debt","onSubmit","handleInitSubmit","_c","$RefreshReg$"],"sources":["/Users/mohammadbachcha/Desktop/Summer 2024 Projects/Personal-Finance-Tracker/React/finance-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport api from './api'\nimport Popup from \"./components/popup\";\nimport Nav from \"./components/nav\";\nimport Transactions from \"./components/transactions\";\nimport SummarizedView from \"./components/summarizedView\";\n\nconst App = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [startingBalance, setStartingBalance] = useState(0.0)\n  const [goalBalance, setGoalBalance] = useState(0.0)\n  const [expenses, setTotalExpenses] = useState(0.0)\n  const [income, setTotalIncome] = useState(0.0)\n  const [numPayChecks, setNumPayChecks] = useState(0)\n\n  const fetchTransactions = async () => {\n    const response = await (api.get('/transactions/'))\n    console.log(response);\n    setTransactions(response.data)\n  };\n\n  const fetchUserData = async () => {\n    const response = await (api.get('/users/1'))\n    const goal = response.data.goal_balance;\n    const starting = response.data.starting_balance;\n\n    setGoalBalance(goal)\n    setStartingBalance(starting)\n  }\n\n  useEffect(() => {\n    fetchTransactions();\n    fetchUserData();\n  }, []);\n\n  const [formData, setFormData] = useState({\n    amount: '',\n    category: '',\n    description: '',\n    is_income: false,\n    date: ''\n  });\n\n  useEffect(() => {\n\n    const calculateTotalExpenses = () => {\n      if (transactions.length > 0) {\n        const expenses = transactions.filter(transaction => !transaction.is_income);\n        const total = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n        setTotalExpenses(total);\n      } else {\n        setTotalExpenses(0); // Reset total expenses if transactions list is empty\n      }\n    };\n\n    const calculateTotalIncome = () => {\n      if (transactions.length > 0) {\n        const income = transactions.filter(transaction => transaction.is_income);\n        const total = income.reduce((acc, curr) => acc + curr.amount, 0);\n        setTotalIncome(total);\n      } else {\n        setTotalIncome(0); // Reset total expenses if transactions list is empty\n      }\n    };\n\n    const calculateNumPayChecks = () => {\n      if (transactions.length > 0) {\n        const checks = transactions.filter(transaction => transaction.category === \"Paycheck\");\n        const total = checks.length\n        setNumPayChecks(total)\n      } else {\n        setNumPayChecks(0); // Reset total expenses if transactions list is empty\n      }\n    };\n\n    calculateTotalExpenses(); // Initial calculation\n    calculateTotalIncome(); // Initial calculation\n    calculateNumPayChecks();\n\n  }, [transactions]); // Depend on 'transactions' to re-run whenever it changes\n\n\n\n  const handleSubmit = async (formData) => {\n    await api.post('/transactions/', formData)\n    setFormData(\n      {\n        amount: '',\n        category: '',\n        description: '',\n        is_income: false,\n        date: ''\n      }\n    )\n    fetchTransactions()\n  }\n\n  const handleDeleteMain = async (id) => {\n    await api.delete('/transactions/' + id)\n    fetchTransactions()\n  }\n\n  return (\n    <>\n      <Nav />\n      <SummarizedView goal={goalBalance} starting={startingBalance} debt={expenses} income={income} checks={numPayChecks} />\n      <Popup onSubmit={handleSubmit} data={formData} />\n      <Popup onSubmit={handleInitSubmit} />\n      <Transactions transactions={transactions} handleDeleteMain={handleDeleteMain} />\n    </>\n  )\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}